<?xml version="1.0" encoding="UTF-8"?>
<!--Создайте файл конфигурации Spring Bean в папке WEB-INF / config.
 Если STS (Spring Tool Suite) является IDE, включите контекстное пространство,
 mvc и tx. SpringConfig.xml будет показан ниже-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
<!--После включения необходимых пространств имен включите следующее
 (в промежутке между тегами <beans> и </ beans>), чтобы указать, что приложение
 является управляемым аннотацией и базовым пакетом для сканирования контекстного компонента.-->
<mvc:annotation-driven />

<context:component-scan base-package="com.github.elizabetht"/>
<!--Включите компонент InternalResourceViewResolver Spring, чтобы найти файлы jsp-->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="prefix" value="/WEB-INF/jsp/" />
	<property name="suffix" value=".jsp" />
</bean>
<mvc:resources mapping="/resources/**" location="/resources/"/>
<mvc:default-servlet-handler/>
<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	<property name="basename" value="jdbc" />
</bean>
<!--Включите компонент для источника данных,
 где могут быть указаны свойства базы данных MYSQL,
  такие как url, имя пользователя и пароль.
   Замените <include connection url> с фактическим URL-адрес
   ом соединения для подключения к базе данных MYSQL.
    Аналогичным образом замените <include username> и
    <include password> на фактические значения имени
    пользователя и пароля.-->

<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
	<property name="url" value="jdbc:mysql://localhost:3306/markers?autoReconnect=true&amp;createDatabaseIfNotExist=true&amp;" />
	<property name="username" value="root" />
	<property name="password" value="73ubirev" />
</bean>

	<!--Приступая к определенным конфигурациям MyBatis, включите компонент для sqlSessionFactory,
	 который является центральной конфигурацией приложения MyBatis.
	 Этот компонент использует три свойства - dataSource (уже настроенный выше)
	  - typeAliasesPackage (место, где находятся классы модели этого приложения)
	   - mapperLocations (местоположение, где хранятся файлы xper-файла mapper для модели
	    - здесь это не требуется, поскольку конфигурации на основе аннотаций используется
	     вместо этого)
	     -->

<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource" />
	<property name="typeAliasesPackage" value="com.github.elizabetht.model"/>
	<property name="mapperLocations" value="classpath*:com/github/elizabetht/mappers/*.xml"/>
</bean>
<!--Включить компонент для sqlSession-->
<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg index="0" ref="sqlSessionFactory" />
</bean>
<!--Затем и, наконец, включите компонент для MapperScannerConfigurer-->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="basePackage" value="com.github.elizabetht.mappers" />
</bean>
    <!-- REST template configuration -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>
	<!--Включите компонент для диспетчера транзакций для определения / управления транзакциями,
	 который берет источник данных, определенный выше, как ссылочный (зависимый)-->

<tx:annotation-driven transaction-manager="transactionManager" />
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource" />
</bean>



</beans>
